#!/usr/bin/env bash

# unbound-config

export LC_ALL=C

unbound_dir="/usr/sbin"
unbound_host_dir="/usr/bin"

# if you know me, you know we have to have one
obnoxious_header() {
    echo -e "\e[31;1m _   _      _                      _   ___  _  _ ___   ___                      \e[0m"
    echo -e "\e[31;1m| | | |_ _ | |__  ___ _  _ _ _  __| | |   \| \| / __| / __| ___ _ ___ _____ _ _ \e[0m"
    echo -e "\e[31;1m| |_| | ' \| '_ \/ _ \ || | ' \/ _\` | | |) | .\` \__ \ \__ \/ -_) '_\ V / -_) '_|\e[0m"
    echo -e "\e[31;1m \___/|_||_|_.__/\___/\_,_|_||_\__,_| |___/|_|\_|___/ |___/\___|_|  \_/\___|_|  \e[0m\n"
}

help_function() {
    echo -e "Usage: unbound-control [OPTION]

 Options:
    -h, help, --help                     Show this help dialogue
    -i, install, --install               Install unbound-config unbound binaries
    -u, uninstall, --uninstall           Uninstall unbound-config unbound binaries

 Example:
    unbound-control --install"
}

test_unbound() {
package="unbound"
package_query=$(dpkg-query -W --showformat='${Status}\n' $package|grep "install ok installed")
echo -e "\nchecking for $package: $package_query\n"
    if [ "" = "$package_query" ]; then
            echo -e "\e[31;1m$package is not installed - aborting\e[0m\n"
            echo -e "install unbound using your system package manager and then run this script again"
            exit 0
        else
            echo -e "proceeding ...\n"
    fi
}

install_unbound() {
    obnoxious_header
    test_unbound
    echo -e "the currently installed unbound binary version is ..."
    unbound -V
    echo -e "stopping unbound.service ..."
    systemctl stop unbound.service
    echo -e "\t- done\n"
    echo -e "installing unbound ..."
    cp unbound $unbound_dir
    echo -e "\t- done\n"
    echo -e "installing unbound-anchor ..."
    cp unbound-anchor $unbound_dir
    echo -e "\t- done\n"
    echo -e "installing unbound-checkconf ..."
    cp unbound-checkconf $unbound_dir
    echo -e "\t- done\n"
    echo -e "installing unbound-control ..."
    cp unbound-control $unbound_dir
    echo -e "\t- done\n"
    echo -e "installing unbound-control-setup ..."
    cp unbound-control-setup $unbound_dir
    echo -e "\t- done\n"
    echo -e "installing unbound-host ..."
    cp unbound-host $unbound_host_dir
    echo -e "\t- done\n"
    echo -e "starting unbound.service ..."
    systemctl start unbound.service
    echo -e "\t- done\n"
    echo -e "the newly installed unbound binary version is ..."
    unbound -V
}

uninstall_unbound() {
    obnoxious_header
    echo -e "stopping unbound.service ..."
    systemctl stop unbound.service
    echo -e "\t- done\n"
    echo -e "uninstalling unbound ..."
    rm $unbound_dir/unbound
    echo -e "\t- done\n"
    echo -e "uninstalling unbound-anchor ..."
    rm $unbound_dir/unbound-anchor
    echo -e "\t- done\n"
    echo -e "uninstalling unbound-checkconf ..."
    rm $unbound_dir/unbound-checkconf
    echo -e "\t- done\n"
    echo -e "uninstalling unbound-control ..."
    rm $unbound_dir/unbound-control
    echo -e "\t- done\n"
    echo -e "uninstalling unbound-control-setup ..."
    rm $unbound_dir/unbound-control-setup
    echo -e "\t- done\n"
    echo -e "uninstalling unbound-host ..."
    rm $unbound_host_dir/unbound-host
    echo -e "\t- done\n"
    echo -e "reinstall unbound using your system package manager"
    echo -e "example: apt install --reinstall unbound"
}

if [[ ! $EUID -eq 0 ]];then
    if [[ -x "$(command -v sudo)" ]]; then
        exec sudo bash "$0" "$@"
        exit $?
     else
         echo -e "\e[31;1m\t- please run install as root or install sudo\e[0m\n"
         exit 1
     fi
fi

case "${1}" in
  "-h" | "help" | "--help"               ) help_function "$@";;
  "-i" | "install" | "--install"         ) install_unbound "$@";;
  "-u" | "uninstall" | "--uninstall"     ) uninstall_unbound "$@";;
  *                                      ) help_function 
esac
